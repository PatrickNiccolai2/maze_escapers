#!/usr/bin/env python
#The line above is important so that this file is interpreted with Python when running it.

# Import of python modules.
import math # use of pi.
import tf

# import of relevant libraries.
import rospy # module for ROS APIs
from geometry_msgs.msg import PoseWithCovarianceStamped

def initial_pose_callback(msg, name):
    print(name)
    broadcaster = tf.TransformBroadcaster()
    while(True):
        broadcaster.sendTransform((msg.pose.pose.position.x, msg.pose.pose.position.y, msg.pose.pose.position.z), (msg.pose.pose.orientation.x, msg.pose.pose.orientation.y, msg.pose.pose.orientation.z, msg.pose.pose.orientation.w), rospy.Time.now(), name, "world")
        #rospy.sleep(1)

if __name__ == "__main__":
    """Run the main function."""
    rospy.init_node('tf_broadcaster')
    rospy.Subscriber("/robot_0/initialpose", PoseWithCovarianceStamped, initial_pose_callback, callback_args="/robot_0")
    rospy.Subscriber("/robot_1/initialpose", PoseWithCovarianceStamped, initial_pose_callback, callback_args="/robot_1")
    rospy.Subscriber("/robot_2/initialpose", PoseWithCovarianceStamped, initial_pose_callback, callback_args="/robot_2")
    rospy.Subscriber("/robot_3/initialpose", PoseWithCovarianceStamped, initial_pose_callback, callback_args="/robot_3")
    rospy.Subscriber("/robot_4/initialpose", PoseWithCovarianceStamped, initial_pose_callback, callback_args="/robot_4")
    rospy.Subscriber("/robot_5/initialpose", PoseWithCovarianceStamped, initial_pose_callback, callback_args="/robot_5")
    rospy.Subscriber("/robot_6/initialpose", PoseWithCovarianceStamped, initial_pose_callback, callback_args="/robot_6")
    rospy.Subscriber("/robot_7/initialpose", PoseWithCovarianceStamped, initial_pose_callback, callback_args="/robot_7")
    rospy.Subscriber("/robot_8/initialpose", PoseWithCovarianceStamped, initial_pose_callback, callback_args="/robot_8")
    rospy.Subscriber("/robot_9/initialpose", PoseWithCovarianceStamped, initial_pose_callback, callback_args="/robot_9")

    print("Subscriber set up")
    rospy.spin()