#!/usr/bin/env python
#The line above is important so that this file is interpreted with Python when running it.

# Import of python modules.
import math # use of pi.
import tf

# import of relevant libraries.
import rospy # module for ROS APIs
from geometry_msgs.msg import Twist # message type for cmd_vel
from geometry_msgs.msg import PoseWithCovarianceStamped
from sensor_msgs.msg import LaserScan # message type for scan
from nav_msgs.msg import Odometry
from maze_escapers.srv import Neighbors, NeighborsResponse
from maze_escapers.srv import AddToMap, AddToMapResponse

# Constants.
FREQUENCY = 10 #Hz.
LINEAR_VELOCITY = 0.2 # m/s
ANGULAR_VELOCITY = math.pi/4 # rad/s
LASER_ANGLE_FRONT = 0 # radians
MIN_THRESHOLD_DISTANCE = 0.5 # m, threshold distance.
DEFAULT_CMD_VEL_TOPIC = 'cmd_vel'
DEFAULT_SCAN_TOPIC = 'scan'

class Explorer():
    def __init__(self):
        print("before wait")
        rospy.wait_for_service("/neighbor_service")
        rospy.wait_for_service("/add_to_map_service")
        print("after wait")

        add_proxy = rospy.ServiceProxy("/add_to_map_service", AddToMap)
        resp = add_proxy(1,1)
        print(resp)


def main():
    """Main function."""

    # 1st. initialization of node.
    rospy.init_node("explorer")

    # Sleep for a few seconds to wait for the registration.
    rospy.sleep(2)

    explorer = Explorer()

    # Robot moves 1 m forward, rotate of 180 degrees, and moves 1 m forward.
    try:
        rospy.spin()
    except rospy.ROSInterruptException:
        rospy.logerr("ROS node interrupted.")


if __name__ == "__main__":
    """Run the main function."""
    main()
